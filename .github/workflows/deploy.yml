name: Deploy

on:
    push:
        branches:
            - '**'        # matches every branch
            # - '!main'

jobs:
    build:
        name: Build and Test
        runs-on: ubuntu-latest
        steps:
            - name: log var
              run: echo $BRANCH_NAME

            - name: Specify branch name

              # RAW_TOXENV="py${{ matrix.python }}-django${{ matrix.django }}"
              # TOXENV=$(echo $RAW_TOXENV | sed 's/\.//')
              # echo "TOXENV=$TOXENV" >> $GITHUB_ENV
              # echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
              run:
                  echo "BRANCH_NAME=$(echo ${{ github.head_ref || github.ref_name }} | sed -r 's/[/]+/-/g')" >> $GITHUB_ENV
                #echo "BRANCH_NAME=$(echo {{ github.head_ref || github.ref_name }} | sed -r 's/[/]+/-/g') >> $GITHUB_ENV"
                #RAW_BRANCH_NAME=${{ github.head_ref || github.ref_name }}
                #BRANCH_NAME=$(RAW_BRANCH_NAME | sed -r 's/[/]+/-/g')
                #echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

            - name: log var after regexp
              run: echo ${{ env.BRANCH_NAME }}

            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 14.19.1

            - name: Install deps
              uses: borales/actions-yarn@v4
              with:
                  cmd: install

            - name: Run units
              uses: borales/actions-yarn@v4
              with:
                  cmd: test

            - name: Build production bundle
              uses: borales/actions-yarn@v4
              with:
                  cmd: build

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: production-build
                  path: ./dist
                  if-no-files-found: error

    deploy:
        name: Deploy to gh-pages test-stand
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download artifact
              uses: actions/download-artifact@master
              with:
                   name: production-build
                   path: .

            - name: log var
              run: echo ${{ env.BRANCH_NAME }}

            - name: Deploy to gh pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: .
                  destination_dir: ${{ env.BRANCH_NAME }}