name: Build and Deploy to gh-pages.

on:
    repository_dispatch:
        types: [ rebuild ]

    push:
        branches:
            - 'main'
            - '!staging'

    pull_request:
        branches:
            - '**'
            - '!staging'

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    build:
        name: Build and Test
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repo 
                uses: actions/checkout@v3
                
            -   name: Dump GitHub context
                env:
                    GITHUB_CONTEXT: ${{ toJSON(github) }}
                run: echo "$GITHUB_CONTEXT"

            -   name: Checkout repo 
                uses: actions/checkout@v3
                
            -   name: Dump GitHub context again
                env:
                    GITHUB_CONTEXT_TWO: ${{ toJSON(github) }}
                run: echo "$GITHUB_CONTEXT_TWO"    
                
            -   name: Define repo branch
                uses: haya14busa/action-cond@v1
                id: repositoryBranch
                with:
                    cond: ${{ !github.event.client_payload.ref }}
                    if_true: 'main'
                    if_false: ${{ github.event.client_payload.ref }}

            -   name: Checkout repo if called from PR
                uses: actions/checkout@v3
                with:
                    ref: ${{ steps.repositoryBranch.outputs.value }}

            -   name: Get branch name
                run: |
                    echo ${{ github.head_ref }}
                    echo ${{ github.ref_name }}

            -   name: Setup Node
                uses: actions/setup-node@v3
                with:
                    node-version: 14.19.1

            -   name: Install deps
                uses: borales/actions-yarn@v4
                with:
                    cmd: install

            -   name: Run units
                uses: borales/actions-yarn@v4
                with:
                    cmd: test

            -   name: Build production bundle
                uses: borales/actions-yarn@v4
                with:
                    cmd: build

            -   name: Upload artifact
                uses: actions/upload-artifact@v3
                with:
                    name: production-build
                    path: ./dist
                    if-no-files-found: error

    deploy:
        name: Deploy to staging
        needs: build

        runs-on: ubuntu-latest
        steps:

            -   name: Download artifact
                uses: actions/download-artifact@master
                with:
                     name: production-build
                     path: .

            -   name: Specify branch name
                run: echo "BRANCH_NAME=$(echo ${{ github.head_ref || github.ref_name }} | sed -r 's/[/]+/-/g')" >> $GITHUB_ENV

            -   name: Define destination folder
                uses: haya14busa/action-cond@v1
                id: destinationFolder
                with:
                    cond: ${{ github.ref == 'refs/heads/main' }}
                    if_true: '.'
                    if_false: ${{ env.BRANCH_NAME }}

            -   name: Check
                run: ls -a

            -   name: Deploy to github pages
                uses: peaceiris/actions-gh-pages@v3
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    publish_dir: .
                    destination_dir: ${{ steps.destinationFolder.outputs.value }}
                    publish_branch: staging
                    keep_files: true

    clean:
        name: Delete folder after deploy
        if: github.ref == 'refs/heads/main'
        needs: deploy
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repo
                uses: actions/checkout@v3
                with:
                    ref: staging

            -   name: Dump GitHub context
                env:
                    GITHUB_CONTEXT: ${{ toJSON(github) }}
                run: echo "$GITHUB_CONTEXT"

            -   name: Define folder to delete name
                run: |
                    formatted_commit=$(echo "${{ github.event.head_commit.message }}" | sed -E ':a;N;$!ba;s/\r{0,1}\n/\_UNIQUE_CHAR_/g')
                    branch_name=$(sed -rn 's%^.*${{ github.repository_owner }}\/([A\-z\/\-]+)_UNIQUE_CHAR_.*$%\1%p'<<<"$formatted_commit")
                    folder_name=$(sed -r 's/[/]+/-/g'<<<"$branch_name")
                    echo "FOLDER_NAME=$(echo "$folder_name")" >> $GITHUB_ENV

            -   name: Delete merged folder
                run: rm -rf ${{ env.FOLDER_NAME }}

            -   name: commit success
                run: |
                    git config --global user.email "email@gmail.com"
                    git config --global user.name "github actions"
                    git add .
                    git commit -m "chore: clean repo"
                    git push
